// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level1-geral":
            case "level1":return tiles.createTilemap(hex`1f001f0001010101010106040501010101010101010103030301010101010101010101010101010101020202010101010101010101020202010101010101010101010101010101010202020101010101010101010202020101010101010101010101010101010102020201010101010101010102020201010101010101010101010101010101020202010101010101010101020202010101010101010101010101010101010202020101010101010101010202020101010101010101010101010101010102020201010101010101010102020201010101010101010101010101010101020202010101010101010101020202010101010101010101010101010101010202020101010101010101010202020101010101010101010101010101010102020201010101010101010102020201010101010101010101010101010101020202010101010101010101020202010101010101010101010202020202020202020202020202020202020202020202020202020202020302020202020202020202020202020202020202020202020202020202020203020202020202020202020202020202020202020202020202020202020202030202020101010101010101010101010101010101010202020101010101010102020201010101010101010101010101010101010102020201010101010101020202010101010101010101010101010101010101020202010101010101010202020101010101010101010101010101010101010202020101010101010102020201010101010101010101010101010101010102020201010101010101020202020202020202020202020202020202020202020202010101010101010202020202020202020202020202020202020202020202020101010101010102020202020202020202020202020202020202020202020201010101010101010101010101020202010101010101010101010101020202010101010101010101010101010202020101010101010101010101010202020101010101010101010101010102020201010101010101010101010102020201010101010101010101010101020202010101010101010101010101020202010101010101010101010101010202020101010101010101010101010202020101010101010101010101010102020201010101010101010101010102020201010101010101010101010101020202010101010101010101010101020202010101010101010101010101010202020101010101010101010101010202020101010101010101010101010103030301010101010101010101010103030301010101010101`, img`
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
...............................
...............................
...............................
...222222222222222222...2222222
...222222222222222222...2222222
...222222222222222222...2222222
...222222222222222222...2222222
...222222222222222222...2222222
........................2222222
........................2222222
........................2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileDarkGrass2,sprites.builtin.forestTiles10,sprites.castle.tilePath2,sprites.castle.tilePath3,sprites.castle.tilePath1], TileScale.Sixteen);
            case "level1-2":
            case "level6":return tiles.createTilemap(hex`1f001f`, img`
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
222222...222222222...2222222222
...............................
...............................
...............................
...222222222222222222...2222222
...222222222222222222...2222222
...222222222222222222...2222222
...222222222222222222...2222222
...222222222222222222...2222222
........................2222222
........................2222222
........................2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
222222...222222222222...2222222
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileDarkGrass2,sprites.builtin.forestTiles10,sprites.castle.tilePath2,sprites.castle.tilePath3,sprites.castle.tilePath1,myTiles.tile1,myTiles.tile5,myTiles.tile9], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "seta1":
            case "tile1":return tile1;
            case "seta2":
            case "tile5":return tile5;
            case "seta3":
            case "tile8":return tile8;
            case "seta4":
            case "tile9":return tile9;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
